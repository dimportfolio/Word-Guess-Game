PSEUDO CODE
Variables
----------
User Input - event.key
Attempted Guesses - array
Incorrect Guesses - array
Guesses remaining - variable 9 , - 1 for each guess
wins - variable 0 ++
losses - variable 0 ++
Generator - generates random word from an array
WordList - array of words
--------------

start game
generate random word
user inputs a letter as a guess
-store the input
-compare input , array.indexOf(word)
-if element appears in array, push to ???? | add to generated word?
-if element does not appear in array, push to incorrectGuesses | guessRemaining - 1


if guessRemaining hits 0, reset the game
When game resets , empty attemptedGuesses & incorrectGuesses, set guessesRemaining to 9



Things I tried in my code

Array.pseudocode.method()
-
.fill()
.join()
.indexOf()
.search()
.push()
.splice()

Array.property
.length

DOM.events
.getElementById()

Element.property
.innerHTML
.style.backgroundImage = 'url('+ image +')';
.style.backgroundRepeat = "no-repeat";
.style.backgroundSize = "100%";

GlobalEventHandlers
.onkeyup


Math.floor()
Math.random()

static variables (var something = something at a global level)
dynamic variables (functions() at a global level)
return statements for functions

Javascript Objects [tried to  create an object, with a key that had an array of key value pairs] ... I think wording is right
Object.keys
Object.values
KEY -in- OBJECT


Logic I used
if statements
if else statements
while loops
for loops



useful links
https://javascript.info/keys-values-entries
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach



















Code I used
--------------------------
//list of words - recomment back this list
// var wordList = ["charmander","bulbasaur","squirtle","pikachu","eevee","snorlax","dragonite", "ratattata"];
var wordList = ["eevee"];
//random word generator
var generator = wordList[Math.floor(Math.random() * wordList.length)];

var correctGuess = 0;
var incorrectGuess = 0;
console.log(generator);

var cloak = [];

    for(i=0;i<generator.length;i++){
     var hiddenWord = generator.substr(0, i);
    cloak.push(hiddenWord);
        console.log(hiddenWord);
        console.log(cloak);

};
// console.log(hiddenWord);

//main function 
document.onkeyup = function (enter){
    var store = enter.key;
    console.log(store);
    //testing generator works
    // console.log(generator);
    var n = generator.search(store);
    if (n != -1) {
        correctGuess++;
        document.getElementById("test1").innerHTML = correctGuess;
    }
    else {
        incorrectGuess++;
        document.getElementById("test2").innerHTML = incorrectGuess;
    }

    

    
}













//---------------------------------
/*
var incorrectGuesses = [];
var idx = wordList.indexOf(store);
while(idx!=-1){
    incorrectGuesses.push(idx);
    idx=array.indexOf(store, idx+1);
    
}
console.log("Number of incorrect guesses" + incorrectGuesses.length);
*/
//----------------------------------

/* Tried to say , if generator includes generator, then replace generator with function
the function would create a hyphen that is the length of generator.... but it didnt work.
if (generator.includes(generator)){
    generator.replace(generator, function(){
        hyphen.repeat(generator.length);
    
        
    })
    console.log(generator);
}
*/


/*

var hyphen = "_";

// I wanted to create a hyphened variable that would be the length of the generated word. 
// So I thought, I wanted to loop through to create a hyphen for each character in the word
// What I found was the repeat function, so I created a hyphen, made it repeat by the length of the generated word.
// this code creates a hyphen variable the same length as generator
// I tried taking out the for loop to see if it would work on its own but it does not... not sure why
for(i=0;i<generator.length;i++){
var hiddenWord = hyphen.repeat(generator.length);
console.log(hiddenWord);
}
*/


/*


var hyphen = "- ";

// I wanted to create a hyphened variable that would be the length of the generated word. 
// So I thought, I wanted to loop through to create a hyphen for each character in the word
// What I found was the repeat function, so I created a hyphen, made it repeat by the length of the generated word.
// this code creates a hyphen variable the same length as generator
// I tried taking out the for loop to see if it would work on its own but it does not... not sure why
for(i=0;i<generator.length;i++){
var hiddenWord = hyphen.repeat(generator.length);
console.log(hiddenWord);
var checkindex = generator.indexOf("-");
console.log(checkindex);

document.getElementById("random").write = (String("'" + hiddenWord + "'"));
}

*/


/*


for(i=0;i<generator.length;i++){
        var hiddenWord = generator.replace(generator.charAt(i), "-");

        alert(hiddenWord);

};

prints out this
-evee
-evee
ee-ee
-evee
-evee

*/